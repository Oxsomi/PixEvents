name: $(BuildDefinitionName)_$(date:yyMM).$(date:dd)$(rev:rrr)

trigger:
  batch: true
  branches:
    include:
    - main

pool:
  name: WinPix_Pool
  
variables:
  - name: InfraRetryCountOnTaskFailure
    value: 5 
  - name: Codeql.Enabled
    value: false

stages:
- stage: Build
  jobs:
    - job: Build
      strategy:
        matrix:
          Release_x64:
            BuildPlatform: x64
            BuildConfiguration: Release
          Debug_x64:
            BuildPlatform: x64
            BuildConfiguration: Debug
          Release_ARM64:
            BuildPlatform: ARM64
            BuildConfiguration: Release
          Debug_ARM64:
            BuildPlatform: ARM64
            BuildConfiguration: Debug

      steps:
        - checkout: self
          fetchDepth: 1
          fetchTags: false

        - task: VSBuild@1
          displayName: 'Build PixEvents.sln'
          inputs:
            solution: PixEvents.sln
            vsVersion: "17.0"
            platform: '$(BuildPlatform)'
            configuration: '$(BuildConfiguration)'
            clean: true
      
        - powershell: |
             $vsExtensionPath = 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\Extensions\'
             $googleTestAdapterPath = (
               Get-ChildItem -Path ${vsExtensionPath} -Recurse |
               Where-Object { $_.Name -eq 'GoogleTestAdapter.TestAdapter.dll' } |
               Select-Object -First 1
             ).DirectoryName
             if ([string]::IsNullOrEmpty($googleTestAdapterPath)) {
               Write-Host Could not find Google Test adapter in $vsExtensionPath
               exit 1
             }
             Write-Host Google Test adapter path: $googleTestAdapterPath
             echo "##vso[task.setvariable variable=googleTestAdapterPath]$googleTestAdapterPath"
      
        - task: VSTest@2
          displayName: 'Google Tests'
          inputs:
            testRunTitle: 'GoogleTest_UnitTests_$(BuildPlatform)_$(BuildConfiguration)'
            testSelector: 'testAssemblies'
            testAssemblyVer2: |
                **\*.test.exe
            pathtoCustomTestAdapters: '$(googleTestAdapterPath)'
            diagnosticsEnabled: true
            runInParallel: false
          condition: and(succeeded(), eq(variables['BuildPlatform'], 'x64'))